
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String   @unique
  password      String?
  provider      Provider @default(EMAIL)
  providerId    String?
  emailVerified Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  verificationTokens VerificationToken[]
  sessions           Session[]
  chats              Chat[]
  messages           Message[]
}

model VerificationToken {
  id        String @id @default(cuid())
  token     String
  type      VerificationType
  userId    String 
  createdAt DateTime @default(now())
  expiresAt DateTime 

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  userAgent    String?
  createdAt    DateTime @default(now())
  expiresAt    DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chat {
  id        String    @id @default(cuid())
  name      String?
  createdAt DateTime  @default(now())

  messages     Message[]
  participants User[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  userId    String
  chatId    String

  user User   @relation(fields: [userId], references: [id])
  chat Chat   @relation(fields: [chatId], references: [id])

  @@index([chatId])
  @@index([userId])
}

enum Provider {
  EMAIL 
  GOOGLE
}

enum VerificationType {
  CONFIRM_EMAIL
  PASSWORD_RESET
}